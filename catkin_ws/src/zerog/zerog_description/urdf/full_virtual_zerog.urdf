<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from zerog.xacro                    | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="zerog">
  <!-- <xacro:arg name ="wall_prefix" default="w_a_"/>
    <xacro:arg name ="ceiling_prefix" default="c_a_"/>
    <xacro:arg name ="w_t_prefix" default="w_t_"/>
    <xacro:arg name ="c_t_prefix" default="c_t_"/> -->
  <!-- MRM: As of 30/12/2021, this file stands modified to adapt to the latest zerog_system.xacro 
and zerog.xacro. Until now, although being called, it was of no use as it did not conform to the
prefixes specified for each of the robotic units based on the new overall xacros and were based on
the older version of the overall xacros developed in June-July 2021.-->
  <!-- MRM: This plugin must be called only once in the overall xacro no matter how many robots
    we spawn in the gazebo environment -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      </plugin>
  </gazebo>
  <!-- MRM: as of 30/12/2021 Here onwards modifications have been made-->
  <gazebo reference="c_t_base_link">
    <material>Gazebo/White</material>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="c_t_slider_link">
    <material>Gazebo/Blue</material>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="w_t_base_link">
    <material>Gazebo/White</material>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="w_t_slider_link">
    <material>Gazebo/Blue</material>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="c_a_shoulder_link">
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="c_a_upper_arm_link">
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="c_a_forearm_link">
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="c_a_wrist_1_link">
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="c_a_wrist_3_link">
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="c_a_wrist_2_link">
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="c_a_ee_link">
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="w_a_shoulder_link">
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="w_a_upper_arm_link">
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="w_a_forearm_link">
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="w_a_wrist_1_link">
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="w_a_wrist_3_link">
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="w_a_wrist_2_link">
    <selfCollide>true</selfCollide>
  </gazebo>
  <gazebo reference="w_a_ee_link">
    <selfCollide>true</selfCollide>
  </gazebo>
  <!--
    Base UR robot series xacro macro.

    NOTE: this is NOT a URDF. It cannot directly be loaded by consumers
    expecting a flattened '.urdf' file. See the top-level '.xacro' for that
    (but note: that .xacro must still be processed by the xacro command).

    For use in '.launch' files: use one of the 'load_urX.launch' convenience
    launch files.

    This file models the base kinematic chain of a UR robot, which then gets
    parameterised by various configuration files to convert it into a UR3(e),
    UR5(e), UR10(e) or UR16e.

    NOTE: the default kinematic parameters (ie: link lengths, frame locations,
    offets, etc) do not correspond to any particular robot. They are defaults
    only. There WILL be non-zero offsets between the Forward Kinematics results
    in TF (ie: robot_state_publisher) and the values reported by the Teach
    Pendant.

    For accurate (and robot-specific) transforms, the 'kinematics_parameters_file'
    parameter MUST point to a .yaml file containing the appropriate values for
    the targetted robot.

    If using the UniversalRobots/Universal_Robots_ROS_Driver, follow the steps
    described in the readme of that repository to extract the kinematic
    calibration from the controller and generate the required .yaml file.

    Main author of the migration to yaml configs: Ludovic Delval.

    Contributors to previous versions (in no particular order):

     - Felix Messmer
     - Kelsey Hawkins
     - Wim Meeussen
     - Shaun Edwards
     - Nadia Hammoudeh Garcia
     - Dave Hershberger
     - G. vd. Hoorn
     - Philip Long
     - Dave Coleman
     - Miguel Prada
     - Mathias Luedtke
     - Marcel Schnirring
     - Felix von Drigalski
     - Felix Exner
     - Jimmy Da Silva
     - Ajit Krisshna N L
     - Muhammad Asif Rana
  -->
  <!--
    NOTE: the macro defined in this file is NOT part of the public API of this
          package. Users CANNOT rely on this file being available, or stored in
          this location. Nor can they rely on the existence of the macro.
  -->
  <!-- CArol added 2 more params name and parent -->
  <!--Before you go crazy, refer to and uncomment the sanity check at the bottom in case running:
check_urdf <(xacro w_t.xacro )
-->
  <!-- MRM: 30/12/2021: I am commenting out the include for paramsforgazebo.gazebo.xacro as it is to be included only once in the zerog_system.xacro 
Previously, it had been included here, when the rail urdf was being tested as a standalone unit-->
  <!-- <xacro:include filename="$(find zerog_description)/urdf/inc/common/paramsforgazebo.gazebo.xacro"/> -->
  <!--Defining cobot track as a macro-->
  <!--Sanity Check: Testing the macro created above [comment out when including this file elsewhere]-->
  <!-- <xacro:wall prefix=""/>  -->
  <!--Before you go crazy, refer to and uncomment the sanity check at the bottom in case running:
check_urdf <(xacro c_t.xacro )
-->
  <!-- MRM: 30/12/2021: I am commenting out the include for paramsforgazebo.gazebo.xacro as it is to be included only once in the zerog_system.xacro 
Previously, it had been included here, when the rail urdf was being tested as a standalone unit-->
  <!-- <xacro:include filename="$(find zerog_description)/urdf/inc/common/paramsforgazebo.gazebo.xacro"/> -->
  <!--Defining cobot track as a macro-->
  <!-- MRM: 30/12/2021: Additional note here, the links and the joints in this file for some reason still stay hardcoded instead of prefixed, unlike the
w_t. Not sure why that is. Not changning without testing -->
  <!--Sanity Check: Testing the macro created above [comment out when including this file elsewhere]-->
  <!-- <xacro:c_t prefix=""/>  -->
  <!-- link list -->
  <link name="world"/>
  <!-- ........... -->
  <!-- Wall System -->
  <!-- ........... -->
  <transmission name="w_a_shoulder_pan_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="w_a_shoulder_pan_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="w_a_shoulder_pan_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="w_a_shoulder_lift_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="w_a_shoulder_lift_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="w_a_shoulder_lift_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="w_a_elbow_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="w_a_elbow_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="w_a_elbow_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="w_a_wrist_1_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="w_a_wrist_1_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="w_a_wrist_1_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="w_a_wrist_2_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="w_a_wrist_2_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="w_a_wrist_2_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="w_a_wrist_3_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="w_a_wrist_3_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="w_a_wrist_3_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- links: main serial chain -->
  <link name="w_a_base_link"/>
  <link name="w_a_base_link_inertia">
    <visual>
      <origin rpy="0 0 3.14159265359" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/visual/base.dae"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 3.14159265359" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/collision/base.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="4.0"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0061063308908" ixy="0.0" ixz="0.0" iyy="0.0061063308908" iyz="0.0" izz="0.01125"/>
    </inertial>
  </link>
  <link name="w_a_shoulder_link">
    <visual>
      <origin rpy="0 0 3.14159265359" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/visual/shoulder.dae"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 3.14159265359" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/collision/shoulder.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="7.778"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0314743125769" ixy="0.0" ixz="0.0" iyy="0.0314743125769" iyz="0.0" izz="0.021875625"/>
    </inertial>
  </link>
  <link name="w_a_upper_arm_link">
    <visual>
      <origin rpy="1.57079632679 0 -1.57079632679" xyz="0 0 0.1762"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/visual/upperarm.dae"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 -1.57079632679" xyz="0 0 0.1762"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/collision/upperarm.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="12.93"/>
      <origin rpy="0 1.57079632679 0" xyz="-0.306 0.0 0.175"/>
      <inertia ixx="0.421753803798" ixy="0.0" ixz="0.0" iyy="0.421753803798" iyz="0.0" izz="0.036365625"/>
    </inertial>
  </link>
  <link name="w_a_forearm_link">
    <visual>
      <origin rpy="1.57079632679 0 -1.57079632679" xyz="0 0 0.0393"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/visual/forearm.dae"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 -1.57079632679" xyz="0 0 0.0393"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/collision/forearm.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="3.87"/>
      <origin rpy="0 1.57079632679 0" xyz="-0.285775 0.0 0.0393"/>
      <inertia ixx="0.110793025489" ixy="0.0" ixz="0.0" iyy="0.110793025489" iyz="0.0" izz="0.010884375"/>
    </inertial>
  </link>
  <link name="w_a_wrist_1_link">
    <visual>
      <!-- TODO: Move this to a parameter -->
      <origin rpy="1.57079632679 0 0" xyz="0 0 -0.135"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/visual/wrist1.dae"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 -0.135"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/collision/wrist1.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.96"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0051082479567" ixy="0.0" ixz="0.0" iyy="0.0051082479567" iyz="0.0" izz="0.0055125"/>
    </inertial>
  </link>
  <link name="w_a_wrist_2_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 -0.12"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/visual/wrist2.dae"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 -0.12"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/collision/wrist2.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.96"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0051082479567" ixy="0.0" ixz="0.0" iyy="0.0051082479567" iyz="0.0" izz="0.0055125"/>
    </inertial>
  </link>
  <link name="w_a_wrist_3_link">
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 -0.1168"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/visual/wrist3.dae"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 -0.1168"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/collision/wrist3.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.202"/>
      <origin rpy="0 0 0" xyz="0.0 0.0 -0.025"/>
      <inertia ixx="0.000144345775595" ixy="0.0" ixz="0.0" iyy="0.000144345775595" iyz="0.0" izz="0.000204525"/>
    </inertial>
  </link>
  <!-- joints: main serial chain -->
  <joint name="w_a_base_link-base_link_inertia" type="fixed">
    <parent link="w_a_base_link"/>
    <child link="w_a_base_link_inertia"/>
    <!-- 'base_link' is REP-103 aligned (so X+ forward), while the internal
           frames of the robot/controller have X+ pointing backwards.
           Use the joint between 'base_link' and 'base_link_inertia' (a dummy
           link/frame) to introduce the necessary rotation over Z (of pi rad).
      -->
    <origin rpy="0 0 3.14159265359" xyz="0 0 0"/>
  </joint>
  <joint name="w_a_shoulder_pan_joint" type="revolute">
    <parent link="w_a_base_link_inertia"/>
    <child link="w_a_shoulder_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.1807"/>
    <axis xyz="0 0 1"/>
    <limit effort="330.0" lower="-6.28318530718" upper="6.28318530718" velocity="2.09439510239"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="w_a_shoulder_lift_joint" type="revolute">
    <parent link="w_a_shoulder_link"/>
    <child link="w_a_upper_arm_link"/>
    <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="330.0" lower="-6.28318530718" upper="6.28318530718" velocity="2.09439510239"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="w_a_elbow_joint" type="revolute">
    <parent link="w_a_upper_arm_link"/>
    <child link="w_a_forearm_link"/>
    <origin rpy="0 0 0" xyz="-0.6127 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="150.0" lower="-3.14159265359" upper="3.14159265359" velocity="3.14159265359"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="w_a_wrist_1_joint" type="revolute">
    <parent link="w_a_forearm_link"/>
    <child link="w_a_wrist_1_link"/>
    <origin rpy="0 0 0" xyz="-0.57155 0 0.17415"/>
    <axis xyz="0 0 1"/>
    <limit effort="56.0" lower="-6.28318530718" upper="6.28318530718" velocity="3.14159265359"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="w_a_wrist_2_joint" type="revolute">
    <parent link="w_a_wrist_1_link"/>
    <child link="w_a_wrist_2_link"/>
    <origin rpy="1.570796327 0 0" xyz="0 -0.11985 -2.45816459076e-11"/>
    <axis xyz="0 0 1"/>
    <limit effort="56.0" lower="-6.28318530718" upper="6.28318530718" velocity="3.14159265359"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="w_a_wrist_3_joint" type="revolute">
    <parent link="w_a_wrist_2_link"/>
    <child link="w_a_wrist_3_link"/>
    <origin rpy="1.57079632659 3.14159265359 3.14159265359" xyz="0 0.11655 -2.39048045935e-11"/>
    <axis xyz="0 0 1"/>
    <limit effort="56.0" lower="-6.28318530718" upper="6.28318530718" velocity="3.14159265359"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <!-- ROS-Industrial 'base' frame: base_link to UR 'Base' Coordinates transform -->
  <link name="w_a_base"/>
  <joint name="w_a_base_link-base_fixed_joint" type="fixed">
    <!-- Note the rotation over Z of pi radians: as base_link is REP-103
           aligned (ie: has X+ forward, Y+ left and Z+ up), this is needed
           to correctly align 'base' with the 'Base' coordinate system of
           the UR controller.
      -->
    <origin rpy="0 0 3.14159265359" xyz="0 0 0"/>
    <parent link="w_a_base_link"/>
    <child link="w_a_base"/>
  </joint>
  <!-- ROS-Industrial 'flange' frame: attachment point for EEF models -->
  <link name="w_a_flange"/>
  <joint name="w_a_wrist_3-flange" type="fixed">
    <parent link="w_a_wrist_3_link"/>
    <child link="w_a_flange"/>
    <origin rpy="0 -1.57079632679 -1.57079632679" xyz="0 0 0"/>
  </joint>
  <!-- ROS-Industrial 'tool0' frame: all-zeros tool frame -->
  <link name="w_a_tool0"/>
  <joint name="w_a_flange-tool0" type="fixed">
    <!-- default toolframe: X+ left, Y+ up, Z+ front -->
    <origin rpy="1.57079632679 0 1.57079632679" xyz="0 0 0"/>
    <parent link="w_a_flange"/>
    <child link="w_a_tool0"/>
  </joint>
  <link name="w_t_base_link"/>
  <link name="w_t_base_link_inertia">
    <inertial>
      <origin rpy="0 0 0" xyz="2.1194073250673338 0.10129237734439407 -0.036317242060705066"/>
      <mass value="273.5544918556637"/>
      <inertia ixx="8.676347" ixy="-1.870327" ixz="0.446626" iyy="519.77827" iyz="-0.244259" izz="527.635334"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/wall/base_link.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="Gray">
        <color rgba="0.4 0.4 0.4 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/wall/base_link.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <link name="w_t_slider_link">
    <inertial>
      <origin rpy="0 0 0" xyz="-0.053753433105282716 0.0356727282662012 -0.12311788862188115"/>
      <mass value="15.165649489921714"/>
      <inertia ixx="0.235594" ixy="0.044575" ixz="-0.00779" iyy="0.111571" iyz="0.032079" izz="0.324205"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="-0.0 -0.0 0.0"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/wall/slider_link.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="White">
        <color rgba="1.0 1.0 1.0 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="-0.0 -0.0 0.0"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/wall/slider_link.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <joint name="w_t_base_link_to_w_t_base_link_inertia" type="fixed">
    <parent link="w_t_base_link"/>
    <child link="w_t_base_link_inertia"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint>
  <joint name="w_t_slider_joint" type="prismatic">
    <!-- <joint name="${prefix}slider_joint" type="fixed"> -->
    <origin rpy="0 0 0" xyz="0.0 0.0 -0.0"/>
    <parent link="w_t_base_link_inertia"/>
    <child link="w_t_slider_link"/>
    <axis xyz="1.0 0.0 0.0"/>
    <limit effort="100" lower="0.0" upper="4.33" velocity="100"/>
  </joint>
  <transmission name="w_t_slider_joint">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="w_t_slider_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="w_t_slider_joint_actr">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- <xacro:track_transmission prefix="wall" hard_interface="EffortJointInterface" /> -->
  <!--Gazebo params-->
  <!--<xacro:common_params_gazebo/>-->
  <!-- Joints -->
  <joint name="world_to_w_t" type="fixed">
    <parent link="world"/>
    <child link="w_t_base_link"/>
    <origin rpy="-1.57 0.0 0.0" xyz="0.470 -2.850 1.448"/>
  </joint>
  <joint name="w_t_to_robot" type="fixed">
    <parent link="w_t_slider_link"/>
    <child link="w_a_base_link"/>
    <origin rpy="0 0.0 0.0" xyz="0 0 0"/>
  </joint>
  <!--Additional links for Moveit Servo and IAC  -->
  <!-- mrm: 11-08-2022: Wall robot: adding a chaser link and joint -->
  <!-- <link name="chaser_camera"/>
	  <joint name="chaser_camera_to_w_a_tool0" type="fixed">
		<parent link="w_a_tool0"/>
		<child link="chaser_camera"/>
		<origin xyz="0.061 -0.033 0.021" rpy="1.465 0.007 1.402"/>

	 </joint> -->
  <!-- mrm: 11-08-2022: ceiling robot: adding a target link and joint-->
  <!-- <link name="target_sat"/>
	  <joint name="target_sat_to_c_a_tool0" type="fixed">
		<parent link="c_a_tool0"/>
		<child link="target_sat"/>
		<origin xyz="-0.015 -0.017 0.174" rpy="-1.697 -0.014 0.152 "/>
	</joint> -->
  <!-- 18-08-2022: MRM : Additional frames for Mockup TCPs: ICRA -->
  <!-- <link name="${ceiling_prefix}tcp_coll"/>
	<joint name="tcp_coll_to_c_a_tool0" type="fixed">
		<parent link="c_a_tool0"/>
		<child link="${ceiling_prefix}tcp_coll"/>		
		<origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
	</joint>

	<link name="${ceiling_prefix}tcp_coll_end"/>
	<joint name="tcp_coll_end_to_c_a_tool0" type="fixed">
		<parent link="${ceiling_prefix}tcp_coll"/>
		<child link="${ceiling_prefix}tcp_coll_end"/>
		<origin xyz="0.0 0.0 0.04" rpy="0.0 0.0 0.0"/>
	</joint> -->
  <!-- mrm: 18-08-2022: wall robot: adding a target link and joint-->
  <!-- <link name="${wall_prefix}tcp_coll"/>
	<joint name="${wall_prefix}tcp_coll_to_w_a_tool0" type="fixed">
		<parent link="w_a_tool0"/>
		<child link="${wall_prefix}tcp_coll"/>
		<origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
	</joint>

	<link name="${wall_prefix}tcp_coll_end"/>
	<joint name="tcp_coll_end_to_w_a_tool0" type="fixed">
		<parent link="${wall_prefix}tcp_coll"/>
		<child link="${wall_prefix}tcp_coll_end"/>
		<origin xyz="0.0 0.0 0.055" rpy="0.0 0.0 0.0"/>
	</joint> -->
  <!-- 24-08-2022: MRM : Additional frames for Probe and Artefacts: ICRA -->
  <!-- Ceiling arm probe -->
  <!-- <link name="${ceiling_prefix}tcp_probe"/>
	<joint name="tcp_probe_to_c_a_tool0" type="fixed">
		<parent link="c_a_tool0"/>
		<child link="${ceiling_prefix}tcp_probe"/>		
		<origin xyz="0.0 0.0 0.158" rpy="0.0 0.0 0.0"/>
	</joint> -->
  <!-- wall arm artefact+tray -->
  <!-- <link name="${wall_prefix}tcp_artefact1"/>
	<joint name="${wall_prefix}tcp_artefact1_to_${wall_prefix}tool0" type="fixed">
		<parent link="${wall_prefix}tool0"/>
		<child link="${wall_prefix}tcp_artefact1"/>
		<origin xyz="0.0 0.076 0.13" rpy="0.0 0.0 0.0"/>
	</joint> -->
  <!-- ........... -->
  <!-- Ceiling System -->
  <!-- ........... -->
  <transmission name="c_a_shoulder_pan_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="c_a_shoulder_pan_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="c_a_shoulder_pan_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="c_a_shoulder_lift_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="c_a_shoulder_lift_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="c_a_shoulder_lift_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="c_a_elbow_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="c_a_elbow_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="c_a_elbow_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="c_a_wrist_1_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="c_a_wrist_1_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="c_a_wrist_1_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="c_a_wrist_2_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="c_a_wrist_2_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="c_a_wrist_2_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="c_a_wrist_3_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="c_a_wrist_3_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="c_a_wrist_3_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- links: main serial chain -->
  <link name="c_a_base_link"/>
  <link name="c_a_base_link_inertia">
    <visual>
      <origin rpy="0 0 3.14159265359" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/visual/base.dae"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 3.14159265359" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/collision/base.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="4.0"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0061063308908" ixy="0.0" ixz="0.0" iyy="0.0061063308908" iyz="0.0" izz="0.01125"/>
    </inertial>
  </link>
  <link name="c_a_shoulder_link">
    <visual>
      <origin rpy="0 0 3.14159265359" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/visual/shoulder.dae"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 3.14159265359" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/collision/shoulder.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="7.778"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0314743125769" ixy="0.0" ixz="0.0" iyy="0.0314743125769" iyz="0.0" izz="0.021875625"/>
    </inertial>
  </link>
  <link name="c_a_upper_arm_link">
    <visual>
      <origin rpy="1.57079632679 0 -1.57079632679" xyz="0 0 0.1762"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/visual/upperarm.dae"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 -1.57079632679" xyz="0 0 0.1762"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/collision/upperarm.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="12.93"/>
      <origin rpy="0 1.57079632679 0" xyz="-0.306 0.0 0.175"/>
      <inertia ixx="0.421753803798" ixy="0.0" ixz="0.0" iyy="0.421753803798" iyz="0.0" izz="0.036365625"/>
    </inertial>
  </link>
  <link name="c_a_forearm_link">
    <visual>
      <origin rpy="1.57079632679 0 -1.57079632679" xyz="0 0 0.0393"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/visual/forearm.dae"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 -1.57079632679" xyz="0 0 0.0393"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/collision/forearm.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="3.87"/>
      <origin rpy="0 1.57079632679 0" xyz="-0.285775 0.0 0.0393"/>
      <inertia ixx="0.110793025489" ixy="0.0" ixz="0.0" iyy="0.110793025489" iyz="0.0" izz="0.010884375"/>
    </inertial>
  </link>
  <link name="c_a_wrist_1_link">
    <visual>
      <!-- TODO: Move this to a parameter -->
      <origin rpy="1.57079632679 0 0" xyz="0 0 -0.135"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/visual/wrist1.dae"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 -0.135"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/collision/wrist1.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.96"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0051082479567" ixy="0.0" ixz="0.0" iyy="0.0051082479567" iyz="0.0" izz="0.0055125"/>
    </inertial>
  </link>
  <link name="c_a_wrist_2_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 -0.12"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/visual/wrist2.dae"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 -0.12"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/collision/wrist2.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.96"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0051082479567" ixy="0.0" ixz="0.0" iyy="0.0051082479567" iyz="0.0" izz="0.0055125"/>
    </inertial>
  </link>
  <link name="c_a_wrist_3_link">
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 -0.1168"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/visual/wrist3.dae"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 -0.1168"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ur10e/collision/wrist3.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.202"/>
      <origin rpy="0 0 0" xyz="0.0 0.0 -0.025"/>
      <inertia ixx="0.000144345775595" ixy="0.0" ixz="0.0" iyy="0.000144345775595" iyz="0.0" izz="0.000204525"/>
    </inertial>
  </link>
  <!-- joints: main serial chain -->
  <joint name="c_a_base_link-base_link_inertia" type="fixed">
    <parent link="c_a_base_link"/>
    <child link="c_a_base_link_inertia"/>
    <!-- 'base_link' is REP-103 aligned (so X+ forward), while the internal
           frames of the robot/controller have X+ pointing backwards.
           Use the joint between 'base_link' and 'base_link_inertia' (a dummy
           link/frame) to introduce the necessary rotation over Z (of pi rad).
      -->
    <origin rpy="0 0 3.14159265359" xyz="0 0 0"/>
  </joint>
  <joint name="c_a_shoulder_pan_joint" type="revolute">
    <parent link="c_a_base_link_inertia"/>
    <child link="c_a_shoulder_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.1807"/>
    <axis xyz="0 0 1"/>
    <limit effort="330.0" lower="-6.28318530718" upper="6.28318530718" velocity="2.09439510239"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="c_a_shoulder_lift_joint" type="revolute">
    <parent link="c_a_shoulder_link"/>
    <child link="c_a_upper_arm_link"/>
    <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="330.0" lower="-6.28318530718" upper="6.28318530718" velocity="2.09439510239"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="c_a_elbow_joint" type="revolute">
    <parent link="c_a_upper_arm_link"/>
    <child link="c_a_forearm_link"/>
    <origin rpy="0 0 0" xyz="-0.6127 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="150.0" lower="-3.14159265359" upper="3.14159265359" velocity="3.14159265359"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="c_a_wrist_1_joint" type="revolute">
    <parent link="c_a_forearm_link"/>
    <child link="c_a_wrist_1_link"/>
    <origin rpy="0 0 0" xyz="-0.57155 0 0.17415"/>
    <axis xyz="0 0 1"/>
    <limit effort="56.0" lower="-6.28318530718" upper="6.28318530718" velocity="3.14159265359"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="c_a_wrist_2_joint" type="revolute">
    <parent link="c_a_wrist_1_link"/>
    <child link="c_a_wrist_2_link"/>
    <origin rpy="1.570796327 0 0" xyz="0 -0.11985 -2.45816459076e-11"/>
    <axis xyz="0 0 1"/>
    <limit effort="56.0" lower="-6.28318530718" upper="6.28318530718" velocity="3.14159265359"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="c_a_wrist_3_joint" type="revolute">
    <parent link="c_a_wrist_2_link"/>
    <child link="c_a_wrist_3_link"/>
    <origin rpy="1.57079632659 3.14159265359 3.14159265359" xyz="0 0.11655 -2.39048045935e-11"/>
    <axis xyz="0 0 1"/>
    <limit effort="56.0" lower="-6.28318530718" upper="6.28318530718" velocity="3.14159265359"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <!-- ROS-Industrial 'base' frame: base_link to UR 'Base' Coordinates transform -->
  <link name="c_a_base"/>
  <joint name="c_a_base_link-base_fixed_joint" type="fixed">
    <!-- Note the rotation over Z of pi radians: as base_link is REP-103
           aligned (ie: has X+ forward, Y+ left and Z+ up), this is needed
           to correctly align 'base' with the 'Base' coordinate system of
           the UR controller.
      -->
    <origin rpy="0 0 3.14159265359" xyz="0 0 0"/>
    <parent link="c_a_base_link"/>
    <child link="c_a_base"/>
  </joint>
  <!-- ROS-Industrial 'flange' frame: attachment point for EEF models -->
  <link name="c_a_flange"/>
  <joint name="c_a_wrist_3-flange" type="fixed">
    <parent link="c_a_wrist_3_link"/>
    <child link="c_a_flange"/>
    <origin rpy="0 -1.57079632679 -1.57079632679" xyz="0 0 0"/>
  </joint>
  <!-- ROS-Industrial 'tool0' frame: all-zeros tool frame -->
  <link name="c_a_tool0"/>
  <joint name="c_a_flange-tool0" type="fixed">
    <!-- default toolframe: X+ left, Y+ up, Z+ front -->
    <origin rpy="1.57079632679 0 1.57079632679" xyz="0 0 0"/>
    <parent link="c_a_flange"/>
    <child link="c_a_tool0"/>
  </joint>
  <link name="c_t_base_link"/>
  <link name="c_t_base_link_inertia">
    <inertial>
      <origin rpy="0 0 0" xyz="1.634670440794769 -0.030732618031595015 -0.1125056435418255"/>
      <mass value="166.64658924523246"/>
      <inertia ixx="2.978557" ixy="-0.157008" ixz="0.023749" iyy="241.062243" iyz="-0.66571" izz="240.867254"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ceiling/base_link.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="Gray">
        <color rgba="0.4 0.4 0.4 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ceiling/base_link.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <link name="c_t_slider_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.05248868496043539 -0.03878871409154891 -0.03725564548207447"/>
      <mass value="15.161153477006874"/>
      <inertia ixx="0.280379" ixy="0.051554" ixz="0.023265" iyy="0.186301" iyz="-0.078052" izz="0.299275"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="-0.0 -0.0 -0.0"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ceiling/slider_link.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="White">
        <color rgba="1.0 1.0 1.0 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="-0.0 -0.0 -0.0"/>
      <geometry>
        <mesh filename="package://zerog_description/meshes/ceiling/slider_link.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <joint name="c_t_base_link_to_c_t_base_link_inertia" type="fixed">
    <parent link="c_t_base_link"/>
    <child link="c_t_base_link_inertia"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint>
  <joint name="c_t_slider_joint" type="prismatic">
    <!-- <joint name="${prefix}_slider_joint" type="fixed"> -->
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
    <parent link="c_t_base_link_inertia"/>
    <child link="c_t_slider_link"/>
    <axis xyz="1.0 0.0 0.0"/>
    <limit effort="100" lower="0.0" upper="3.204" velocity="100"/>
  </joint>
  <transmission name="c_t_slider_joint">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="c_t_slider_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="c_t_slider_joint_actr">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- <xacro:track_transmission prefix="ceiling" hard_interface="EffortJointInterface" /> -->
  <!--Gazebo params-->
  <!--<xacro:common_params_gazebo/>-->
  <!-- Joints -->
  <joint name="world_to_c_t" type="fixed">
    <parent link="world"/>
    <child link="c_t_base_link"/>
    <!--<origin xyz="0.499 -1.568 2.411" rpy="3.140 0.0 0.0"/>-->
    <!-- CAROL. The values belowed are the new calibrated values after running tests with BS 20th July 2022 -->
    <origin rpy="3.140 0.0 0.0" xyz="0.525 -1.54 2.411"/>
  </joint>
  <joint name="c_t_to_robot" type="fixed">
    <parent link="c_t_slider_link"/>
    <child link="c_a_base_link"/>
    <origin rpy="0 0.0 3.14" xyz="0 0 0"/>
  </joint>
  <!-- ........... -->
  <!-- Workspace -->
  <!-- ........... -->
  <link name="zerog_room_frame">
    <visual>
      <geometry>
        <!-- MRM: 14-10-2022: This was the previous frame -->
        <!-- <mesh filename="package://zerog_description/meshes/environment/zerog_room.STL" /> -->
        <!-- MRM: 14-10-2022: Updated the stl file by baris:-->
        <mesh filename="package://zerog_description/meshes/environment/zerog_room_andrej.stl"/>
      </geometry>
      <material name="white">
        <color rgba="1.0 1.0 1.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <!-- MRM: 14-10-2022: This was the previous frame -->
        <!-- <mesh filename="package://zerog_description/meshes/environment/zerog_room.STL" /> -->
        <!-- MRM: 14-10-2022: Updated the stl file by baris:-->
        <mesh filename="package://zerog_description/meshes/environment/zerog_room_andrej.stl"/>
      </geometry>
    </collision>
  </link>
  <!-- Joints -->
  <joint name="world_to_zerogroom" type="fixed">
    <parent link="world"/>
    <child link="zerog_room_frame"/>
    <origin xyz="0 0 0"/>
  </joint>
  <!-- For proposal need to be deleted later until actual incorporation -->
  <!-- Links -->
  <!-- CubeSAT -->
  <!-- <link name="cubesat">
		<visual>
			<geometry>
				<mesh filename="package://zerog_description/meshes/misc/cubesat.STL" scale="0.0015 0.0015 0.0015"/>
			</geometry>
			<material name="cubesat" >
				<color rgba="0 0 1.0 1.0"/>
      </material>
		</visual>
		<collision>
			<geometry>
				<mesh filename="package://zerog_description/meshes/misc/cubesat.STL" scale="0.0015 0.0015 0.0015"/>
			</geometry>
		</collision>
	</link>

  <!- Joints -->
  <!-- <joint name="w_a_tool0-cubesat" type="fixed">
		<parent link="w_a_tool0" />
		<child link="cubesat"/>
		<origin xyz="-0.035 -0.035 0.03"/>
	</joint> -->
  <!-- Another Satellite -->
  <!-- <link name="satellite">
		<visual>
			<geometry>
				<mesh filename="package://zerog_description/meshes/misc/satellite.STL" scale="0.0000085 0.0000085 0.0000085"/>
			</geometry>
			<material name="satellite" >
				<color rgba="0.0 1.0 0.0 1.0"/>
      </material>
		</visual>
		<collision>
			<geometry>
				<mesh filename="package://zerog_description/meshes/misc/satellite.STL" scale="0.0000085 0.0000085 0.0000085"/>
			</geometry>
		</collision>
	</link> -->
  <!-- Joints -->
  <!-- <joint name="c_a_tool0-satelite" type="fixed">
		<parent link="c_a_tool0" />
		<child link="satellite"/>
		<origin xyz="0.0 0.0 0.2" rpy="-1.57 0.0 0.0"/>
	</joint> -->
  <!-- FP -->
  <!-- <link name="floating_platform1">
		<visual>
			<geometry>
				<mesh filename="package://zerog_description/meshes/misc/floating_platform.STL" scale= "0.001 0.001 0.001"/>
			</geometry>
			<material name="platform" >
				<color rgba="0.85 0.0 0.0 1.0"/>
      </material>
		</visual>
		<collision>
			<geometry>
				<mesh filename="package://zerog_description/meshes/misc/floating_platform.STL" scale= "0.001 0.001 0.001"/>
			</geometry>
		</collision>
	</link> -->
  <!-- Joints -->
  <!-- <joint name="world-fp" type="fixed">
		<parent link="world" />
		<child link="floating_platform1"/>
		<origin xyz="0.25 -1.0 0.0" rpy="0.0 0.0 0.0"/>
	</joint>

    <link name="floating_platform2">
		<visual>
			<geometry>
				<mesh filename="package://zerog_description/meshes/misc/floating_platform.STL" scale= "0.001 0.001 0.001"/>
			</geometry>
			<material name="platform" >
				<color rgba="0.85 0.0 0.0 1.0"/>
      </material>
		</visual>
		<collision>
			<geometry>
				<mesh filename="package://zerog_description/meshes/misc/floating_platform.STL" scale= "0.001 0.001 0.001"/>
			</geometry>
		</collision>
	</link> -->
  <!-- Joints -->
  <!-- <joint name="world-fp2" type="fixed">
		<parent link="world" />
		<child link="floating_platform2"/>
		<origin xyz="3.0 -2.95 0.0" rpy="0.0 0.0 0.0"/>
	</joint>  -->
</robot>
